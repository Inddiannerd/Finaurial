{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import{jwtDecode}from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext(null);export const useAuth=()=>useContext(AuthContext);export const AuthProvider=_ref=>{let{children}=_ref;const[token,setToken]=useState(localStorage.getItem('token'));const[user,setUser]=useState(null);useEffect(()=>{const storedToken=localStorage.getItem('token');if(storedToken){try{const decoded=jwtDecode(storedToken);// Check if token is expired\nif(decoded.exp*1000<Date.now()){logout();// Use logout to clear everything\n}else{setToken(storedToken);setUser(decoded.user);}}catch(error){console.error('Invalid token on initial load',error);logout();// Clear invalid token\n}}},[]);const login=newToken=>{try{const decoded=jwtDecode(newToken);localStorage.setItem('token',newToken);setToken(newToken);setUser(decoded.user);}catch(error){console.error('Failed to decode new token on login',error);}};const logout=()=>{localStorage.removeItem('token');setToken(null);setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{token,user,login,logout},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jwtDecode","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","token","setToken","localStorage","getItem","user","setUser","storedToken","decoded","exp","Date","now","logout","error","console","login","newToken","setItem","removeItem","Provider","value"],"sources":["C:/Users/vansh patel/OneDrive/Desktop/study/sem5/projects/finaurial/finaurial/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jwtDecode } from 'jwt-decode';\n\nexport const AuthContext = createContext(null);\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      try {\n        const decoded = jwtDecode(storedToken);\n        // Check if token is expired\n        if (decoded.exp * 1000 < Date.now()) {\n          logout(); // Use logout to clear everything\n        } else {\n          setToken(storedToken);\n          setUser(decoded.user);\n        }\n      } catch (error) {\n        console.error('Invalid token on initial load', error);\n        logout(); // Clear invalid token\n      }\n    }\n  }, []);\n\n  const login = (newToken) => {\n    try {\n      const decoded = jwtDecode(newToken);\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(decoded.user);\n    } catch (error) {\n      console.error('Failed to decode new token on login', error);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC7E,OAASC,SAAS,KAAQ,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,MAAO,MAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,IAAI,CAAC,CAE9C,MAAO,MAAM,CAAAQ,OAAO,CAAGA,CAAA,GAAML,UAAU,CAACI,WAAW,CAAC,CAEpD,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CACjE,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,WAAW,CAAGJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,GAAIG,WAAW,CAAE,CACf,GAAI,CACF,KAAM,CAAAC,OAAO,CAAGf,SAAS,CAACc,WAAW,CAAC,CACtC;AACA,GAAIC,OAAO,CAACC,GAAG,CAAG,IAAI,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE,CACnCC,MAAM,CAAC,CAAC,CAAE;AACZ,CAAC,IAAM,CACLV,QAAQ,CAACK,WAAW,CAAC,CACrBD,OAAO,CAACE,OAAO,CAACH,IAAI,CAAC,CACvB,CACF,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDD,MAAM,CAAC,CAAC,CAAE;AACZ,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,KAAK,CAAIC,QAAQ,EAAK,CAC1B,GAAI,CACF,KAAM,CAAAR,OAAO,CAAGf,SAAS,CAACuB,QAAQ,CAAC,CACnCb,YAAY,CAACc,OAAO,CAAC,OAAO,CAAED,QAAQ,CAAC,CACvCd,QAAQ,CAACc,QAAQ,CAAC,CAClBV,OAAO,CAACE,OAAO,CAACH,IAAI,CAAC,CACvB,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC7D,CACF,CAAC,CAED,KAAM,CAAAD,MAAM,CAAGA,CAAA,GAAM,CACnBT,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC,CAChChB,QAAQ,CAAC,IAAI,CAAC,CACdI,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEX,IAAA,CAACC,WAAW,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAAEnB,KAAK,CAAEI,IAAI,CAAEU,KAAK,CAAEH,MAAO,CAAE,CAAAZ,QAAA,CACzDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}