{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vansh patel\\\\OneDrive\\\\Desktop\\\\study\\\\sem5\\\\projects\\\\finaurial\\\\finaurial\\\\src\\\\context\\\\CurrencyContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useMemo, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyContext = /*#__PURE__*/createContext();\nexport const useCurrency = () => {\n  _s();\n  return useContext(CurrencyContext);\n};\n_s(useCurrency, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst supportedCurrencies = {\n  USD: {\n    symbol: '$',\n    locale: 'en-US'\n  },\n  INR: {\n    symbol: '₹',\n    locale: 'en-IN'\n  },\n  EUR: {\n    symbol: '€',\n    locale: 'de-DE'\n  },\n  GBP: {\n    symbol: '£',\n    locale: 'en-GB'\n  },\n  JPY: {\n    symbol: '¥',\n    locale: 'ja-JP'\n  },\n  CAD: {\n    symbol: 'CA$',\n    locale: 'en-CA'\n  },\n  AUD: {\n    symbol: 'A$',\n    locale: 'en-AU'\n  },\n  SGD: {\n    symbol: 'S$',\n    locale: 'en-SG'\n  },\n  CHF: {\n    symbol: 'CHF',\n    locale: 'de-CH'\n  },\n  CNY: {\n    symbol: '¥',\n    locale: 'zh-CN'\n  }\n};\nexport const CurrencyProvider = ({\n  children\n}) => {\n  _s2();\n  const [currency, setCurrency] = useState(() => {\n    try {\n      const saved = localStorage.getItem('finaurial-currency');\n      return saved && supportedCurrencies[saved] ? saved : 'USD';\n    } catch (error) {\n      return 'USD';\n    }\n  });\n  useEffect(() => {\n    try {\n      localStorage.setItem('finaurial-currency', currency);\n    } catch (error) {\n      console.warn('Could not save currency to localStorage');\n    }\n  }, [currency]);\n  const formatCurrency = useMemo(() => value => {\n    const {\n      locale\n    } = supportedCurrencies[currency];\n    const numberValue = Number(value);\n    if (isNaN(numberValue)) {\n      return new Intl.NumberFormat(supportedCurrencies['USD'].locale, {\n        style: 'currency',\n        currency: 'USD'\n      }).format(0);\n    }\n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency\n    }).format(numberValue);\n  }, [currency]);\n  const value = {\n    currency,\n    setCurrency,\n    formatCurrency,\n    supportedCurrencies,\n    symbol: supportedCurrencies[currency].symbol\n  };\n  return /*#__PURE__*/_jsxDEV(CurrencyContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(CurrencyProvider, \"pr72MLLdbATS18idRUuEi3Ix0U8=\");\n_c = CurrencyProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrencyProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useMemo","useEffect","jsxDEV","_jsxDEV","CurrencyContext","useCurrency","_s","supportedCurrencies","USD","symbol","locale","INR","EUR","GBP","JPY","CAD","AUD","SGD","CHF","CNY","CurrencyProvider","children","_s2","currency","setCurrency","saved","localStorage","getItem","error","setItem","console","warn","formatCurrency","value","numberValue","Number","isNaN","Intl","NumberFormat","style","format","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vansh patel/OneDrive/Desktop/study/sem5/projects/finaurial/finaurial/src/context/CurrencyContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useMemo, useEffect } from 'react';\n\nconst CurrencyContext = createContext();\n\nexport const useCurrency = () => useContext(CurrencyContext);\n\nconst supportedCurrencies = {\n  USD: { symbol: '$', locale: 'en-US' },\n  INR: { symbol: '₹', locale: 'en-IN' },\n  EUR: { symbol: '€', locale: 'de-DE' },\n  GBP: { symbol: '£', locale: 'en-GB' },\n  JPY: { symbol: '¥', locale: 'ja-JP' },\n  CAD: { symbol: 'CA$', locale: 'en-CA' },\n  AUD: { symbol: 'A$', locale: 'en-AU' },\n  SGD: { symbol: 'S$', locale: 'en-SG' },\n  CHF: { symbol: 'CHF', locale: 'de-CH' },\n  CNY: { symbol: '¥', locale: 'zh-CN' },\n};\n\nexport const CurrencyProvider = ({ children }) => {\n  const [currency, setCurrency] = useState(() => {\n    try {\n      const saved = localStorage.getItem('finaurial-currency');\n      return saved && supportedCurrencies[saved] ? saved : 'USD';\n    } catch (error) {\n      return 'USD';\n    }\n  });\n\n  useEffect(() => {\n    try {\n      localStorage.setItem('finaurial-currency', currency);\n    } catch (error) {\n      console.warn('Could not save currency to localStorage');\n    }\n  }, [currency]);\n\n  const formatCurrency = useMemo(() => (value) => {\n    const { locale } = supportedCurrencies[currency];\n    const numberValue = Number(value);\n    if (isNaN(numberValue)) {\n        return new Intl.NumberFormat(supportedCurrencies['USD'].locale, { style: 'currency', currency: 'USD' }).format(0);\n    }\n    return new Intl.NumberFormat(locale, { style: 'currency', currency }).format(numberValue);\n  }, [currency]);\n\n  const value = {\n    currency,\n    setCurrency,\n    formatCurrency,\n    supportedCurrencies,\n    symbol: supportedCurrencies[currency].symbol,\n  };\n\n  return (\n    <CurrencyContext.Provider value={value}>\n      {children}\n    </CurrencyContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMQ,WAAW,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,eAAe,CAAC;AAAA;AAACE,EAAA,CAAhDD,WAAW;AAExB,MAAME,mBAAmB,GAAG;EAC1BC,GAAG,EAAE;IAAEC,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACrCC,GAAG,EAAE;IAAEF,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACrCE,GAAG,EAAE;IAAEH,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACrCG,GAAG,EAAE;IAAEJ,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACrCI,GAAG,EAAE;IAAEL,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACrCK,GAAG,EAAE;IAAEN,MAAM,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACvCM,GAAG,EAAE;IAAEP,MAAM,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACtCO,GAAG,EAAE;IAAER,MAAM,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACtCQ,GAAG,EAAE;IAAET,MAAM,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAQ,CAAC;EACvCS,GAAG,EAAE;IAAEV,MAAM,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAQ;AACtC,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,MAAM;IAC7C,IAAI;MACF,MAAM0B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;MACxD,OAAOF,KAAK,IAAIlB,mBAAmB,CAACkB,KAAK,CAAC,GAAGA,KAAK,GAAG,KAAK;IAC5D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF,CAAC,CAAC;EAEF3B,SAAS,CAAC,MAAM;IACd,IAAI;MACFyB,YAAY,CAACG,OAAO,CAAC,oBAAoB,EAAEN,QAAQ,CAAC;IACtD,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdE,OAAO,CAACC,IAAI,CAAC,yCAAyC,CAAC;IACzD;EACF,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMS,cAAc,GAAGhC,OAAO,CAAC,MAAOiC,KAAK,IAAK;IAC9C,MAAM;MAAEvB;IAAO,CAAC,GAAGH,mBAAmB,CAACgB,QAAQ,CAAC;IAChD,MAAMW,WAAW,GAAGC,MAAM,CAACF,KAAK,CAAC;IACjC,IAAIG,KAAK,CAACF,WAAW,CAAC,EAAE;MACpB,OAAO,IAAIG,IAAI,CAACC,YAAY,CAAC/B,mBAAmB,CAAC,KAAK,CAAC,CAACG,MAAM,EAAE;QAAE6B,KAAK,EAAE,UAAU;QAAEhB,QAAQ,EAAE;MAAM,CAAC,CAAC,CAACiB,MAAM,CAAC,CAAC,CAAC;IACrH;IACA,OAAO,IAAIH,IAAI,CAACC,YAAY,CAAC5B,MAAM,EAAE;MAAE6B,KAAK,EAAE,UAAU;MAAEhB;IAAS,CAAC,CAAC,CAACiB,MAAM,CAACN,WAAW,CAAC;EAC3F,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,MAAMU,KAAK,GAAG;IACZV,QAAQ;IACRC,WAAW;IACXQ,cAAc;IACdzB,mBAAmB;IACnBE,MAAM,EAAEF,mBAAmB,CAACgB,QAAQ,CAAC,CAACd;EACxC,CAAC;EAED,oBACEN,OAAA,CAACC,eAAe,CAACqC,QAAQ;IAACR,KAAK,EAAEA,KAAM;IAAAZ,QAAA,EACpCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACvB,GAAA,CAxCWF,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}