{"ast":null,"code":"import axios from'axios';const instance=axios.create({baseURL:process.env.NODE_ENV==='production'?'/api':'http://localhost:5000/api',timeout:5000,headers:{'Content-Type':'application/json'}});// Add a request interceptor to include auth token\ninstance.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['x-auth-token']=token;}return config;},error=>{return Promise.reject(error);});export default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","process","env","NODE_ENV","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject"],"sources":["C:/Users/vansh patel/OneDrive/Desktop/study/sem5/projects/finaurial/finaurial/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.NODE_ENV === 'production' \r\n    ? '/api' \r\n    : 'http://localhost:5000/api',\r\n  timeout: 5000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add a request interceptor to include auth token\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['x-auth-token'] = token;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,QAAQ,CAAGD,KAAK,CAACE,MAAM,CAAC,CAC5BC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAC1C,MAAM,CACN,2BAA2B,CAC/BC,OAAO,CAAE,IAAI,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAAC,cAAc,CAAC,CAAGK,KAAK,CACxC,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAI,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}