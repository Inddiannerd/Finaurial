{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vansh patel\\\\OneDrive\\\\Desktop\\\\study\\\\sem5\\\\projects\\\\finaurial\\\\finaurial\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Default to false\n  const [user, setUser] = useState(null); // To store user data if needed\n\n  // In a real app, you'd check localStorage or a token here on mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Here you would typically validate the token with your backend\n      // For now, we'll just assume if a token exists, the user is authenticated\n      setIsAuthenticated(true);\n      // You might also decode the token to get user info or fetch user data\n      setUser({\n        username: 'Guest'\n      }); // Placeholder user\n    }\n  }, []);\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","token","localStorage","getItem","username","login","userData","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vansh patel/OneDrive/Desktop/study/sem5/projects/finaurial/finaurial/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Default to false\n  const [user, setUser] = useState(null); // To store user data if needed\n\n  // In a real app, you'd check localStorage or a token here on mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Here you would typically validate the token with your backend\n      // For now, we'll just assume if a token exists, the user is authenticated\n      setIsAuthenticated(true);\n      // You might also decode the token to get user info or fetch user data\n      setUser({ username: 'Guest' }); // Placeholder user\n    }\n  }, []);\n\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT;MACA;MACAH,kBAAkB,CAAC,IAAI,CAAC;MACxB;MACAE,OAAO,CAAC;QAAEI,QAAQ,EAAE;MAAQ,CAAC,CAAC,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGA,CAACJ,KAAK,EAAEK,QAAQ,KAAK;IACjCJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;IACpCH,kBAAkB,CAAC,IAAI,CAAC;IACxBE,OAAO,CAACM,QAAQ,CAAC;EACnB,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCX,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,eAAe;MAAEE,IAAI;MAAEM,KAAK;MAAEG;IAAO,CAAE;IAAAb,QAAA,EACnEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CAjCWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}